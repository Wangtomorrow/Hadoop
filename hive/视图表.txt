视图是指计算机数据库中的视图，是一个虚拟表，即不是实实在在的，其内容由查询定义。同真实的表一样，视图包含一系列带有名称的列和行数据。但是，视图并不在数据库中以存储的数据值集形式存在。行和列数据来自由定义视图的查询所引用的表，并且在引用视图时动态生成。
一般情况，是多表关联查询的时候，才用视图　
对一个表来说，视图是横向的，一般创建视图查询语句都要加条件的 
索引是作用列上面的 
索引是为了提高查询速度的，视图是在查询sql的基础上的。
比如一个表很多字段，你查询的时候，只是想取得其中一部分字段，并且包含一些特定条件的数据 ，这个时候最好用视图。



当数据表结构很复杂，但我们只关心其中一部分数据的时候就可以使用视图，定义关心的数据

创建视图：
  create view v_stu as select  c.name as c_name ,s.name as stu_name from student  s,class  c where c.id = s.class_id

查询视图 v_stu
  select * from v_stu
 
1.安全性。一般是这样做的:创建一个视图，定义好该视图所操作的数据。之后将用户权限与视图绑定。
  这样的方式是使用到了一个特性：grant语句可以针对视图进行授予权限。
2.查询性能提高。
3.有灵活性的功能需求后，需要改动表的结构而导致工作量比较大。那么可以使用虚拟表的形式达到少修改的效果。
  这是在实际开发中比较有用的。
4.复杂的查询需求。可以进行问题分解，然后将创建多个视图获取数据。将视图联合起来就能得到需要的结果了。


视图的工作机制:
  当调用视图的时候，才会执行视图中的sql，进行取数据操作。
  视图的内容没有存储，而是在视图被引用的时候才派生出数据。
  这样不会占用空间，由于是即时引用，视图的内容总是与真实表的内容是一致的。
  视图这样设计有什么好处？节省空间，内容是总是一致的话，那么我们不需要维护视图的内容，维护好真实表的内容，就可以保证视图的完整性了。


视图的执行方式

  视图中是没有保存真实的数据的，只是引用了真实表中的数据，其引用的数据有其定义决定，当我们进行查询视图其实是从定义中取数据；
  MySQL 中会有infomation_schema 这么一个数据库，它是mysql自带的一个数据库，存储mysql数据库的一些元数据，所谓的元数据是指的是mysql的表信息。
  视图信息、列信息等。简单的说就相当于mysql数据库的一个目录。所有的视图在views 表中都有存储说明；从这里我们可以看出mysql 的工作机制；
     select * from v_stu ；
  v_stu也可以是一个表名，由于视图和表的物理结构不同，表中可以查出真实的数据，而视图需要查找到是定义，从而得到需要的数据，我们怎么知道v_stu是一个视图呢？是因为有一个查看目录的例程在做这件事。