Hive提供了复合数据类型：

　　1)Structs： structs内部的数据可以通过DOT（.）来存取。例如，表中一列c的类型为STRUCT{a INT; b INT}，我们可以通过c.a来访问域a。

　　2)Map（K-V对）：访问指定域可以通过["指定域名称"]进行。例如，一个Map M包含了一个group-》gid的kv对，gid的值可以通过M['group']来获取。

    3)Array：array中的数据为相同类型。例如，假如array A中元素['a','b','c']，则A[1]的值为'b'

1、Struct使用

　　1) 建表

　Hive> create table student_test(id INT, info struct< name:STRING, age:INT>)  
　　  > ROW FORMAT DELIMITED FIELDS TERMINATED BY ','                         
　　  > COLLECTION ITEMS TERMINATED BY ':';

    2) 导入数据
　$ cat test5.txt   
　　1,zhou:30  
　　2,yan:30  
　　3,chen:20  
　　4,li:80  

　　Hive> LOAD DATA LOCAL INPATH '/home/hadoop/djt/test5.txt' INTO TABLE student_test;

　  3）查询数据
    Hive> select info.age from student_test;  

2、Array使用

　　1) 建表

　Hive> create table class_test(name string, student_id_list array< INT>)  
　　  > ROW FORMAT DELIMITED                                              
　　  > FIELDS TERMINATED BY ','                                          
　　  > COLLECTION ITEMS TERMINATED BY ':';

    2) 导入数据

　　$ cat test6.txt   
　　034,1:2:3:4  
　　035,5:6  
　　036,7:8:9:10  
　　Hive>  LOAD DATA LOCAL INPATH '/home/work/data/test6.txt' INTO TABLE class_test ; 
　  
    3) 查询

　　Hive> select student_id_list[3] from class_test; 

3、Map使用

　　1）建表

　Hive> create table employee(id string, perf map< string, int>)       
　　> ROW FORMAT DELIMITED                                          
　　> FIELDS TERMINATED BY '\t'                                
　　> COLLECTION ITEMS TERMINATED BY ','                       
　　> MAP KEYS TERMINATED BY ':';  
　　‘MAP KEYS TERMINATED BY’ ：key value分隔符

　　2）导入数据

　　$ cat test7.txt   
　　1       job:80,team:60,person:70  
　　2       job:60,team:80  
　　3       job:90,team:70,person:100  
　　Hive>  LOAD DATA LOCAL INPATH '/home/work/data/test7.txt' INTO TABLE employee;  
 

　　3）查询

　Hive> select perf['person'] from employee;