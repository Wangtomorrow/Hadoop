https://blog.csdn.net/mhtian2015/article/details/78899171


hive使用Serde进行行对象的序列与反序列化。
SerDe is a short name for "Serializer and Deserializer."
Hive uses SerDe (and FileFormat) to read and write table rows.
HDFS files --> InputFileFormat --> <key, value> --> Deserializer --> Row object
Row object --> Serializer --> <key, value> --> OutputFileFormat --> HDFS files
当是读取hdfs文件时key部分将会被忽略，在写入hdfs时key总是一个常量，一般的行的数据是存储在value中的。
创建表时使用用户自定义的Serde或者native Serde，如果 ROW FORMAT没有指定或者指定了 ROW FORMAT DELIMITED就会使用native Serde。
hive已经实现了许多自定义的Serde。

1.使用已经定义好的
正则:RegEx
ROW FORMAT SERDE
'org.apache.hadoop.hive.serde2.RegexSerDe'
WITH SERDEPROPERTIES 
(
"input.regex" = "<regex>"
)
"input.regex" = "([^]*) ([^]*) ([^]*) (-|\\[^\\]*\\]) ([^ \"]*|\"[^\"]*\") (-|[0-9]*) (-|[0-9]*)(?: ([^ \"]*|\".*\") ([^ \"]*|\".*\"))?"


2.自己定义新的serde
	定义一个类， 继承抽象类AbstractSerDe， 实现initialize, deserialize
	添加自定义的SerDe类的jar包
		hive > add jar MySerDe.jar
	创建表格时属性row fromat指定自定义的SerDe类
		ROW FORMAT SERDE 'com.coder4.hive.MySerDe'
		STORED AS
  		INPUTFORMAT 'com.coder4.hive.DocFileInputFormat'
  		OUTPUTFORMAT 'com.coder4.hive.DocFileOutputFormat'